// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: geo.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MatchType int32

const (
	MatchType_START MatchType = 0
	MatchType_END   MatchType = 1
)

// Enum value maps for MatchType.
var (
	MatchType_name = map[int32]string{
		0: "START",
		1: "END",
	}
	MatchType_value = map[string]int32{
		"START": 0,
		"END":   1,
	}
)

func (x MatchType) Enum() *MatchType {
	p := new(MatchType)
	*p = x
	return p
}

func (x MatchType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MatchType) Descriptor() protoreflect.EnumDescriptor {
	return file_geo_proto_enumTypes[0].Descriptor()
}

func (MatchType) Type() protoreflect.EnumType {
	return &file_geo_proto_enumTypes[0]
}

func (x MatchType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MatchType.Descriptor instead.
func (MatchType) EnumDescriptor() ([]byte, []int) {
	return file_geo_proto_rawDescGZIP(), []int{0}
}

type Point struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Lat           float64                `protobuf:"fixed64,1,opt,name=lat,proto3" json:"lat,omitempty"`
	Lng           float64                `protobuf:"fixed64,2,opt,name=lng,proto3" json:"lng,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Point) Reset() {
	*x = Point{}
	mi := &file_geo_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Point) ProtoMessage() {}

func (x *Point) ProtoReflect() protoreflect.Message {
	mi := &file_geo_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Point.ProtoReflect.Descriptor instead.
func (*Point) Descriptor() ([]byte, []int) {
	return file_geo_proto_rawDescGZIP(), []int{0}
}

func (x *Point) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *Point) GetLng() float64 {
	if x != nil {
		return x.Lng
	}
	return 0
}

type Ride struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RideId        string                 `protobuf:"bytes,1,opt,name=ride_id,json=rideId,proto3" json:"ride_id,omitempty"`
	StartPoint    *Point                 `protobuf:"bytes,2,opt,name=start_point,json=startPoint,proto3" json:"start_point,omitempty"`
	EndPoint      *Point                 `protobuf:"bytes,3,opt,name=end_point,json=endPoint,proto3" json:"end_point,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ride) Reset() {
	*x = Ride{}
	mi := &file_geo_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ride) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ride) ProtoMessage() {}

func (x *Ride) ProtoReflect() protoreflect.Message {
	mi := &file_geo_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ride.ProtoReflect.Descriptor instead.
func (*Ride) Descriptor() ([]byte, []int) {
	return file_geo_proto_rawDescGZIP(), []int{1}
}

func (x *Ride) GetRideId() string {
	if x != nil {
		return x.RideId
	}
	return ""
}

func (x *Ride) GetStartPoint() *Point {
	if x != nil {
		return x.StartPoint
	}
	return nil
}

func (x *Ride) GetEndPoint() *Point {
	if x != nil {
		return x.EndPoint
	}
	return nil
}

type FilterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Point         *Point                 `protobuf:"bytes,1,opt,name=point,proto3" json:"point,omitempty"`
	Rides         []*Ride                `protobuf:"bytes,2,rep,name=rides,proto3" json:"rides,omitempty"`
	MatchType     MatchType              `protobuf:"varint,3,opt,name=match_type,json=matchType,proto3,enum=proto.MatchType" json:"match_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilterRequest) Reset() {
	*x = FilterRequest{}
	mi := &file_geo_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterRequest) ProtoMessage() {}

func (x *FilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_geo_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterRequest.ProtoReflect.Descriptor instead.
func (*FilterRequest) Descriptor() ([]byte, []int) {
	return file_geo_proto_rawDescGZIP(), []int{2}
}

func (x *FilterRequest) GetPoint() *Point {
	if x != nil {
		return x.Point
	}
	return nil
}

func (x *FilterRequest) GetRides() []*Ride {
	if x != nil {
		return x.Rides
	}
	return nil
}

func (x *FilterRequest) GetMatchType() MatchType {
	if x != nil {
		return x.MatchType
	}
	return MatchType_START
}

type FilterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rides         []*Ride                `protobuf:"bytes,1,rep,name=rides,proto3" json:"rides,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilterResponse) Reset() {
	*x = FilterResponse{}
	mi := &file_geo_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterResponse) ProtoMessage() {}

func (x *FilterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_geo_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterResponse.ProtoReflect.Descriptor instead.
func (*FilterResponse) Descriptor() ([]byte, []int) {
	return file_geo_proto_rawDescGZIP(), []int{3}
}

func (x *FilterResponse) GetRides() []*Ride {
	if x != nil {
		return x.Rides
	}
	return nil
}

var File_geo_proto protoreflect.FileDescriptor

const file_geo_proto_rawDesc = "" +
	"\n" +
	"\tgeo.proto\x12\x05proto\"+\n" +
	"\x05Point\x12\x10\n" +
	"\x03lat\x18\x01 \x01(\x01R\x03lat\x12\x10\n" +
	"\x03lng\x18\x02 \x01(\x01R\x03lng\"y\n" +
	"\x04Ride\x12\x17\n" +
	"\aride_id\x18\x01 \x01(\tR\x06rideId\x12-\n" +
	"\vstart_point\x18\x02 \x01(\v2\f.proto.PointR\n" +
	"startPoint\x12)\n" +
	"\tend_point\x18\x03 \x01(\v2\f.proto.PointR\bendPoint\"\x87\x01\n" +
	"\rFilterRequest\x12\"\n" +
	"\x05point\x18\x01 \x01(\v2\f.proto.PointR\x05point\x12!\n" +
	"\x05rides\x18\x02 \x03(\v2\v.proto.RideR\x05rides\x12/\n" +
	"\n" +
	"match_type\x18\x03 \x01(\x0e2\x10.proto.MatchTypeR\tmatchType\"3\n" +
	"\x0eFilterResponse\x12!\n" +
	"\x05rides\x18\x01 \x03(\v2\v.proto.RideR\x05rides*\x1f\n" +
	"\tMatchType\x12\t\n" +
	"\x05START\x10\x00\x12\a\n" +
	"\x03END\x10\x012[\n" +
	"\x12GeoDistanceService\x12E\n" +
	"\x16FilterRidesByProximity\x12\x14.proto.FilterRequest\x1a\x15.proto.FilterResponseB\x1cZ\x1asearch-service/proto;protob\x06proto3"

var (
	file_geo_proto_rawDescOnce sync.Once
	file_geo_proto_rawDescData []byte
)

func file_geo_proto_rawDescGZIP() []byte {
	file_geo_proto_rawDescOnce.Do(func() {
		file_geo_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_geo_proto_rawDesc), len(file_geo_proto_rawDesc)))
	})
	return file_geo_proto_rawDescData
}

var file_geo_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_geo_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_geo_proto_goTypes = []any{
	(MatchType)(0),         // 0: proto.MatchType
	(*Point)(nil),          // 1: proto.Point
	(*Ride)(nil),           // 2: proto.Ride
	(*FilterRequest)(nil),  // 3: proto.FilterRequest
	(*FilterResponse)(nil), // 4: proto.FilterResponse
}
var file_geo_proto_depIdxs = []int32{
	1, // 0: proto.Ride.start_point:type_name -> proto.Point
	1, // 1: proto.Ride.end_point:type_name -> proto.Point
	1, // 2: proto.FilterRequest.point:type_name -> proto.Point
	2, // 3: proto.FilterRequest.rides:type_name -> proto.Ride
	0, // 4: proto.FilterRequest.match_type:type_name -> proto.MatchType
	2, // 5: proto.FilterResponse.rides:type_name -> proto.Ride
	3, // 6: proto.GeoDistanceService.FilterRidesByProximity:input_type -> proto.FilterRequest
	4, // 7: proto.GeoDistanceService.FilterRidesByProximity:output_type -> proto.FilterResponse
	7, // [7:8] is the sub-list for method output_type
	6, // [6:7] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_geo_proto_init() }
func file_geo_proto_init() {
	if File_geo_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_geo_proto_rawDesc), len(file_geo_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_geo_proto_goTypes,
		DependencyIndexes: file_geo_proto_depIdxs,
		EnumInfos:         file_geo_proto_enumTypes,
		MessageInfos:      file_geo_proto_msgTypes,
	}.Build()
	File_geo_proto = out.File
	file_geo_proto_goTypes = nil
	file_geo_proto_depIdxs = nil
}
